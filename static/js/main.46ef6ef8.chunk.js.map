{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHead","TableBody","props","rows","toDoItems","map","item","index","key","className","complete","onClick","completeItem","removeItem","Table","itemCount","count","Form","initialState","state","handleChange","event","value","target","setState","submit","addItem","this","type","name","placeholder","onChange","Component","App","newItems","items","slice","forEach","i","saveState","newCount","filter","getSavedState","localStorage","clear","newState","JSON","stringify","setItem","getItem","parse","ReactDOM","render","document","getElementById"],"mappings":"sNAEMA,EAAY,WACd,OACI,+BACI,4BACI,sCACA,yCACA,wCACA,yCAMVC,EAAY,SAAAC,GAAU,IAElBC,EADgBD,EAAdE,UACeC,KAAI,SAACC,EAAMC,GAC9B,OACI,wBAAIC,IAAKD,GACL,4BAAKA,EAAM,GACX,wBAAIE,UAAWH,EAAKI,SAAW,WAAa,IAAKJ,EAAKA,MACtD,4BACI,4BAAQG,UAAU,gBAAgBE,QAAS,kBAAMT,EAAMU,aAAaL,KAApE,aAEJ,4BACI,4BAAQI,QAAS,kBAAMT,EAAMW,WAAWN,KAAxC,eAKhB,OACI,+BACKJ,IAeEW,EAVD,SAAAZ,GAAU,IACZE,EAAcF,EAAdE,UACR,OACI,+BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWA,UAAWA,EAAWS,WAAYX,EAAMW,WAAYD,aAAcV,EAAMU,aAAcG,UAAWb,EAAMc,UCE/GC,E,4MAzCXC,aAAe,CACXZ,KAAM,I,EAGVa,MAAQ,EAAKD,a,EAuBbE,aAAe,SAAAC,GAAU,IACbC,EAAUD,EAAME,OAAhBD,MACR,EAAKE,SAAS,CAAElB,KAAMgB,EAAOZ,UAAU,K,EAG3Ce,OAAS,WACA,EAAKN,MAAMb,OAGhB,EAAKJ,MAAMwB,QAAQ,EAAKP,MAAMb,MAC9B,EAAKkB,SAAS,EAAKN,gB,uDA/Bb,IACEZ,EAASqB,KAAKR,MAAdb,KACR,OACI,8BACI,2BACIsB,KAAK,OACLC,KAAK,OACLP,MAAOhB,EACPwB,YAAY,WACZC,SAAUJ,KAAKP,eAEnB,2BACIQ,KAAK,SACLN,MAAM,MACNb,UAAU,cACVE,QAASgB,KAAKF,c,GAvBfO,aCuEJC,E,kDApEX,WAAY/B,GAAQ,IAAD,8BACf,cAAMA,IAoBVU,aAAe,SAAAL,GACX,IAAM2B,EAAW,EAAKf,MAAMgB,MAAMC,QAClCF,EAASG,SAAQ,SAAC/B,EAAMgC,GAChB/B,IAAU+B,IACVhC,EAAKI,UAAW,MAGxB,EAAKc,SAAS,CAAEW,MAAOD,GAAY,EAAKK,YA5BzB,EAgCnBb,QAAU,SAAApB,GACN,EAAKkB,SAAS,CAAEW,MAAM,GAAD,mBAAM,EAAKhB,MAAMgB,OAAjB,CAAwB,CAAC7B,YAC9C,IAAMkC,EAAW,EAAKrB,MAAMH,OAAO,EACnC,EAAKQ,SAAS,CAAER,MAAOwB,GAAY,EAAKD,YAnCzB,EAuCnB1B,WAAa,SAAAN,GAAU,IAEb2B,EADY,EAAKf,MAAfgB,MACeM,QAAO,SAACnC,EAAMgC,GAAP,OAAaA,IAAM/B,KACjD,EAAKiB,SAAS,CAAEW,MAAOD,IACvB,IAAMM,EAAW,EAAKrB,MAAMH,OAAO,EACnC,EAAKQ,SAAS,CAAER,MAAOwB,GAAY,EAAKD,YA1CxC,EAAKpB,MAAQ,EAAKuB,gBAFH,E,qDAMT,IACEP,EAAUR,KAAKR,MAAfgB,MACR,OACI,yBAAK1B,UAAU,mBACX,yBAAKA,UAAU,iBACX,2CAEJ,kBAAC,EAAD,CAAOL,UAAW+B,EAAOtB,WAAYc,KAAKd,WAAYD,aAAce,KAAKf,aAAcI,MAAOW,KAAKR,MAAMH,QACnF,IAArBW,KAAKR,MAAMH,MAAc,qDAAgC,GAC1D,kBAAC,EAAD,CAAMU,QAASC,KAAKD,a,kCAkC5BiB,aAAaC,QACb,IAAMC,EAAWC,KAAKC,UAAUpB,KAAKR,OACrCwB,aAAaK,QAAQ,QAASH,K,sCAK9B,IAAM1B,EAAQwB,aAAaM,QAAQ,SACnC,OAAI9B,EACO2B,KAAKI,MAAM/B,GAEX,CACHgB,MAAO,GACPnB,MAAO,O,GA/DLgB,aCElBmB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.46ef6ef8.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst TableHead = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Number</th>\n                <th>List Item</th>\n                <th>Complete</th>\n                <th>Remove</th>\n            </tr>\n        </thead>\n    )\n}\n\nconst TableBody = props => {\n    const { toDoItems } = props;\n    const rows = toDoItems.map((item, index) => {\n        return (\n            <tr key={index}>\n                <td>{index+1}</td>\n                <td className={item.complete ? \"complete\" : \"\"}>{item.item}</td>\n                <td>\n                    <button className=\"accent-button\" onClick={() => props.completeItem(index)}>Complete</button>\n                </td>\n                <td>\n                    <button onClick={() => props.removeItem(index)}>Remove</button>\n                </td>\n            </tr>\n        )\n    });\n    return (\n        <tbody>\n            {rows}\n        </tbody>\n    )\n}\n\nconst Table = props => {\n    const { toDoItems } = props;\n    return (\n        <table>\n            <TableHead />\n            <TableBody toDoItems={toDoItems} removeItem={props.removeItem} completeItem={props.completeItem} itemCount={props.count} />\n        </table>\n    )\n}\n\nexport default Table;","import React, { Component } from 'react'\n\nclass Form extends Component {\n\n    initialState = {\n        item: ''\n    }\n\n    state = this.initialState;\n\n    render() {\n        const { item } = this.state;\n        return(\n            <form>\n                <input \n                    type=\"text\"\n                    name=\"item\"\n                    value={item}\n                    placeholder=\"New Item\"\n                    onChange={this.handleChange}\n                />\n                <input\n                    type=\"button\"\n                    value=\"Add\"\n                    className=\"full-button\"\n                    onClick={this.submit}\n                />\n            </form>\n        )\n    }\n\n    handleChange = event => {\n        const { value } = event.target;\n        this.setState({ item: value, complete: false });\n    }\n\n    submit = () => {\n        if (!this.state.item) {\n            return;\n        }\n        this.props.addItem(this.state.item);\n        this.setState(this.initialState);\n    }\n}\n\nexport default Form;","import React, { Component } from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = this.getSavedState();\n    }\n\n\n    render() {\n        const { items } = this.state;\n        return (\n            <div className=\"small-container\">\n                <div className=\"margin-bottom\">\n                    <h1>To Do List</h1>\n                </div>\n                <Table toDoItems={items} removeItem={this.removeItem} completeItem={this.completeItem} count={this.state.count} />\n                {this.state.count === 0 ? <p>You have no items yet.</p> : \"\"}\n                <Form addItem={this.addItem} />\n            </div>\n        )\n    }\n\n\n    completeItem = index => {\n        const newItems = this.state.items.slice();\n        newItems.forEach((item, i) => {\n            if (index === i) {\n                item.complete = true;\n            }\n        });\n        this.setState({ items: newItems }, this.saveState);\n    }\n\n\n    addItem = item => {\n        this.setState({ items: [...this.state.items, {item}] });\n        const newCount = this.state.count+=1;\n        this.setState({ count: newCount }, this.saveState)\n    }\n\n\n    removeItem = index => {\n        const { items } = this.state;\n        const newItems = items.filter((item, i) => i !== index);\n        this.setState({ items: newItems });\n        const newCount = this.state.count-=1;\n        this.setState({ count: newCount }, this.saveState);\n    }\n\n\n    saveState() {\n        localStorage.clear();\n        const newState = JSON.stringify(this.state);\n        localStorage.setItem('state', newState);\n    }\n\n\n    getSavedState() {\n        const state = localStorage.getItem('state');\n        if (state) {\n            return JSON.parse(state);\n        } else {\n            return {\n                items: [],\n                count: 0\n            }\n        }\n    }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}