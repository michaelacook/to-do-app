{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHead","TableBody","props","rows","toDoItems","map","item","index","key","className","complete","onClick","completeItem","removeItem","Table","itemCount","count","Form","initialState","state","handleChange","event","value","target","setState","submit","addItem","this","type","name","placeholder","onChange","Component","App","newItems","items","slice","forEach","i","saveState","newCount","filter","getSavedState","localStorage","clear","newState","JSON","stringify","setItem","getItem","parse","ReactDOM","render","document","getElementById"],"mappings":"sNAEMA,EAAY,WAChB,OACE,+BACE,4BACE,sCACA,yCACA,wCACA,yCAMFC,EAAY,SAAAC,GAAU,IAEpBC,EADgBD,EAAdE,UACeC,KAAI,SAACC,EAAMC,GAChC,OACE,wBAAIC,IAAKD,GACP,4BAAKA,EAAQ,GACb,wBAAIE,UAAWH,EAAKI,SAAW,WAAa,IAAKJ,EAAKA,MACtD,4BACE,4BACEG,UAAU,gBACVE,QAAS,kBAAMT,EAAMU,aAAaL,KAFpC,aAOF,4BACE,4BAAQI,QAAS,kBAAMT,EAAMW,WAAWN,KAAxC,eAKR,OAAO,+BAAQJ,IAkBFW,EAfD,SAAAZ,GAAU,IACdE,EAAcF,EAAdE,UACR,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEA,UAAWA,EACXS,WAAYX,EAAMW,WAClBD,aAAcV,EAAMU,aACpBG,UAAWb,EAAMc,UCNVC,E,4MAvCbC,aAAe,CACbZ,KAAM,I,EAGRa,MAAQ,EAAKD,a,EAuBbE,aAAe,SAAAC,GAAU,IACfC,EAAUD,EAAME,OAAhBD,MACR,EAAKE,SAAS,CAAElB,KAAMgB,EAAOZ,UAAU,K,EAGzCe,OAAS,WACF,EAAKN,MAAMb,OAChB,EAAKJ,MAAMwB,QAAQ,EAAKP,MAAMb,MAC9B,EAAKkB,SAAS,EAAKN,gB,uDA7BX,IACAZ,EAASqB,KAAKR,MAAdb,KACR,OACE,8BACE,2BACEsB,KAAK,OACLC,KAAK,OACLP,MAAOhB,EACPwB,YAAY,WACZC,SAAUJ,KAAKP,eAEjB,2BACEQ,KAAK,SACLN,MAAM,MACNb,UAAU,cACVE,QAASgB,KAAKF,c,GAtBLO,aCsEJC,E,kDAnEb,WAAY/B,GAAQ,IAAD,8BACjB,cAAMA,IAuBRU,aAAe,SAAAL,GACb,IAAM2B,EAAW,EAAKf,MAAMgB,MAAMC,QAClCF,EAASG,SAAQ,SAAC/B,EAAMgC,GAClB/B,IAAU+B,IACZhC,EAAKI,UAAW,MAGpB,EAAKc,SAAS,CAAEW,MAAOD,GAAY,EAAKK,YA/BvB,EAkCnBb,QAAU,SAAApB,GACR,EAAKkB,SAAS,CAAEW,MAAM,GAAD,mBAAM,EAAKhB,MAAMgB,OAAjB,CAAwB,CAAE7B,YAC/C,IAAMkC,EAAY,EAAKrB,MAAMH,OAAS,EACtC,EAAKQ,SAAS,CAAER,MAAOwB,GAAY,EAAKD,YArCvB,EAwCnB1B,WAAa,SAAAN,GAAU,IAEf2B,EADY,EAAKf,MAAfgB,MACeM,QAAO,SAACnC,EAAMgC,GAAP,OAAaA,IAAM/B,KACjD,EAAKiB,SAAS,CAAEW,MAAOD,IACvB,IAAMM,EAAY,EAAKrB,MAAMH,OAAS,EACtC,EAAKQ,SAAS,CAAER,MAAOwB,GAAY,EAAKD,YA3CxC,EAAKpB,MAAQ,EAAKuB,gBAFD,E,qDAKT,IACAP,EAAUR,KAAKR,MAAfgB,MACR,OACE,yBAAK1B,UAAU,mBACb,yBAAKA,UAAU,iBACb,2CAEF,kBAAC,EAAD,CACEL,UAAW+B,EACXtB,WAAYc,KAAKd,WACjBD,aAAce,KAAKf,aACnBI,MAAOW,KAAKR,MAAMH,QAEE,IAArBW,KAAKR,MAAMH,MAAc,qDAAgC,GAC1D,kBAAC,EAAD,CAAMU,QAASC,KAAKD,a,kCA8BxBiB,aAAaC,QACb,IAAMC,EAAWC,KAAKC,UAAUpB,KAAKR,OACrCwB,aAAaK,QAAQ,QAASH,K,sCAI9B,IAAM1B,EAAQwB,aAAaM,QAAQ,SACnC,OAAI9B,EACK2B,KAAKI,MAAM/B,GAEX,CACLgB,MAAO,GACPnB,MAAO,O,GA9DGgB,aCGlBmB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.9112cf71.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst TableHead = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Number</th>\n        <th>List Item</th>\n        <th>Complete</th>\n        <th>Remove</th>\n      </tr>\n    </thead>\n  );\n};\n\nconst TableBody = props => {\n  const { toDoItems } = props;\n  const rows = toDoItems.map((item, index) => {\n    return (\n      <tr key={index}>\n        <td>{index + 1}</td>\n        <td className={item.complete ? \"complete\" : \"\"}>{item.item}</td>\n        <td>\n          <button\n            className=\"accent-button\"\n            onClick={() => props.completeItem(index)}\n          >\n            Complete\n          </button>\n        </td>\n        <td>\n          <button onClick={() => props.removeItem(index)}>Remove</button>\n        </td>\n      </tr>\n    );\n  });\n  return <tbody>{rows}</tbody>;\n};\n\nconst Table = props => {\n  const { toDoItems } = props;\n  return (\n    <table>\n      <TableHead />\n      <TableBody\n        toDoItems={toDoItems}\n        removeItem={props.removeItem}\n        completeItem={props.completeItem}\n        itemCount={props.count}\n      />\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\n\nclass Form extends Component {\n  initialState = {\n    item: \"\",\n  };\n\n  state = this.initialState;\n\n  render() {\n    const { item } = this.state;\n    return (\n      <form>\n        <input\n          type=\"text\"\n          name=\"item\"\n          value={item}\n          placeholder=\"New Item\"\n          onChange={this.handleChange}\n        />\n        <input\n          type=\"button\"\n          value=\"Add\"\n          className=\"full-button\"\n          onClick={this.submit}\n        />\n      </form>\n    );\n  }\n\n  handleChange = event => {\n    const { value } = event.target;\n    this.setState({ item: value, complete: false });\n  };\n\n  submit = () => {\n    if (!this.state.item) return;\n    this.props.addItem(this.state.item);\n    this.setState(this.initialState);\n  };\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport Table from \"./Table\";\nimport Form from \"./Form\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getSavedState();\n  }\n\n  render() {\n    const { items } = this.state;\n    return (\n      <div className=\"small-container\">\n        <div className=\"margin-bottom\">\n          <h1>To Do List</h1>\n        </div>\n        <Table\n          toDoItems={items}\n          removeItem={this.removeItem}\n          completeItem={this.completeItem}\n          count={this.state.count}\n        />\n        {this.state.count === 0 ? <p>You have no items yet.</p> : \"\"}\n        <Form addItem={this.addItem} />\n      </div>\n    );\n  }\n\n  completeItem = index => {\n    const newItems = this.state.items.slice();\n    newItems.forEach((item, i) => {\n      if (index === i) {\n        item.complete = true;\n      }\n    });\n    this.setState({ items: newItems }, this.saveState);\n  };\n\n  addItem = item => {\n    this.setState({ items: [...this.state.items, { item }] });\n    const newCount = (this.state.count += 1);\n    this.setState({ count: newCount }, this.saveState);\n  };\n\n  removeItem = index => {\n    const { items } = this.state;\n    const newItems = items.filter((item, i) => i !== index);\n    this.setState({ items: newItems });\n    const newCount = (this.state.count -= 1);\n    this.setState({ count: newCount }, this.saveState);\n  };\n\n  saveState() {\n    localStorage.clear();\n    const newState = JSON.stringify(this.state);\n    localStorage.setItem(\"state\", newState);\n  }\n\n  getSavedState() {\n    const state = localStorage.getItem(\"state\");\n    if (state) {\n      return JSON.parse(state);\n    } else {\n      return {\n        items: [],\n        count: 0,\n      };\n    }\n  }\n}\n\nexport default App;\n","/* entry point */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./main.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}